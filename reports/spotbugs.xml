<?xml version='1.0' encoding='UTF-8'?>
<BugCollection version='3.1.0' threshold='medium' effort='default'>
	<file classname='board.test.TestingSpiBus'>
		<BugInstance type='DMI_RANDOM_USED_ONLY_ONCE' priority='High' category='BAD_PRACTICE' message='Random object created and used only once in board.test.TestingSpiBus.transfer(byte[])' lineNumber='136'/></file>
	<file classname='core.Agent'>
		<BugInstance type='DLS_DEAD_LOCAL_STORE' priority='High' category='STYLE' message='Dead store to s in core.Agent.main(String[])' lineNumber='26'/>
</file>
<file classname='net.ConnectionManager'><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in net.ConnectionManager.read(): new String(byte[])' lineNumber='255'/><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in net.ConnectionManager.write(SelectionKey): String.getBytes()' lineNumber='227'/><BugInstance type='ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD' priority='High' category='STYLE' message='Write to static field net.ConnectionManager.port from instance method new net.ConnectionManager(int)' lineNumber='54'/></file><file classname='net.Util'><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in net.Util.isUserInGpioGroup(): new java.io.FileReader(File)' lineNumber='20'/></file><file classname='protocol.request.manager.TestingI2cManager'><BugInstance type='DMI_RANDOM_USED_ONLY_ONCE' priority='High' category='BAD_PRACTICE' message='Random object created and used only once in protocol.request.manager.TestingI2cManager.readFromI2c(int, int)' lineNumber='10'/></file><file classname='protocol.request.manager.TestingSpiManager'><BugInstance type='DMI_RANDOM_USED_ONLY_ONCE' priority='High' category='BAD_PRACTICE' message='Random object created and used only once in protocol.request.manager.TestingSpiManager.readFromSpi(int, byte[])' lineNumber='9'/></file><file classname='protocol.request.read.I2cReadRequest'><BugInstance type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' priority='Normal' category='STYLE' message='Redundant nullcheck of readValue, which is known to be non-null in protocol.request.read.I2cReadRequest.formattedResponse()' lineNumber='36'/></file><file classname='protocol.request.read.ReadRequestFactory'><BugInstance type='IM_BAD_CHECK_FOR_ODD' priority='Normal' category='STYLE' message='Check for oddness that won&apos;t work for negative numbers in protocol.request.read.ReadRequestFactory.spi(SpiManager, String, String)' lineNumber='56'/></file><file classname='protocol.request.read.SpiReadRequest'><BugInstance type='EI_EXPOSE_REP2' priority='Normal' category='MALICIOUS_CODE' message='new protocol.request.read.SpiReadRequest(SpiManager, int, byte[]) may expose internal representation by storing an externally mutable object into SpiReadRequest.tBuf' lineNumber='19'/><BugInstance type='RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE' priority='Normal' category='STYLE' message='Redundant nullcheck of formattedBytes, which is known to be non-null in protocol.request.read.SpiReadRequest.getFormattedResponse()' lineNumber='28'/></file><file classname='protocol.request.write.I2cWriteRequest'><BugInstance type='EI_EXPOSE_REP2' priority='Normal' category='MALICIOUS_CODE' message='new protocol.request.write.I2cWriteRequest(I2cManager, int, byte[]) may expose internal representation by storing an externally mutable object into I2cWriteRequest.content' lineNumber='27'/></file><file classname='protocol.request.write.SpiWriteRequest'><BugInstance type='EI_EXPOSE_REP2' priority='Normal' category='MALICIOUS_CODE' message='new protocol.request.write.SpiWriteRequest(SpiManager, int, byte[]) may expose internal representation by storing an externally mutable object into SpiWriteRequest.tBuf' lineNumber='18'/></file><file classname='protocol.request.write.WriteRequestFactory'><BugInstance type='IM_BAD_CHECK_FOR_ODD' priority='Normal' category='STYLE' message='Check for oddness that won&apos;t work for negative numbers in protocol.request.write.WriteRequestFactory.i2c(I2cManager, String, String)' lineNumber='80'/><BugInstance type='IM_BAD_CHECK_FOR_ODD' priority='Normal' category='STYLE' message='Check for oddness that won&apos;t work for negative numbers in protocol.request.write.WriteRequestFactory.spi(SpiManager, String, String)' lineNumber='55'/><BugInstance type='UC_USELESS_CONDITION' priority='High' category='STYLE' message='Useless condition: it&apos;s known that args.length == 1 at this point' lineNumber='23'/></file><file classname='protocol.request.writeread.WriteReadRequestFactory'><BugInstance type='IM_BAD_CHECK_FOR_ODD' priority='Normal' category='STYLE' message='Check for oddness that won&apos;t work for negative numbers in protocol.request.writeread.WriteReadRequestFactory.i2c(I2cManager, String, String, String)' lineNumber='72'/><BugInstance type='IM_BAD_CHECK_FOR_ODD' priority='Normal' category='STYLE' message='Check for oddness that won&apos;t work for negative numbers in protocol.request.writeread.WriteReadRequestFactory.spi(SpiManager, String, String)' lineNumber='40'/></file><file classname='util.ApplicationProperties'><BugInstance type='OBL_UNSATISFIED_OBLIGATION' priority='Normal' category='EXPERIMENTAL' message='util.ApplicationProperties.&lt;static initializer for ApplicationProperties&gt;() may fail to clean up java.io.InputStream' lineNumber='18'/><BugInstance type='OS_OPEN_STREAM' priority='Normal' category='BAD_PRACTICE' message='util.ApplicationProperties.&lt;static initializer for ApplicationProperties&gt;() may fail to close stream' lineNumber='18'/></file><Error></Error><Project><SrcDir>/home/miloslav/NetBeansProjects/GpioDebuggerAgent/src/main/java</SrcDir><SrcDir>/home/miloslav/NetBeansProjects/GpioDebuggerAgent/src/test/java</SrcDir></Project></BugCollection>
